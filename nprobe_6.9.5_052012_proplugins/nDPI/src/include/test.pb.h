// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace test {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class fastbit;
class fb_element_meta;

// ===================================================================

class fastbit : public ::google::protobuf::Message {
 public:
  fastbit();
  virtual ~fastbit();

  fastbit(const fastbit& from);

  inline fastbit& operator=(const fastbit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fastbit& default_instance();

  void Swap(fastbit* other);

  // implements Message ----------------------------------------------

  inline fastbit* New() const { return New(NULL); }

  fastbit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fastbit& from);
  void MergeFrom(const fastbit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(fastbit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num_entries = 1;
  bool has_num_entries() const;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 1;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // required int32 max_num_entries = 2;
  bool has_max_num_entries() const;
  void clear_max_num_entries();
  static const int kMaxNumEntriesFieldNumber = 2;
  ::google::protobuf::int32 max_num_entries() const;
  void set_max_num_entries(::google::protobuf::int32 value);

  // required int32 fb_element_len = 3;
  bool has_fb_element_len() const;
  void clear_fb_element_len();
  static const int kFbElementLenFieldNumber = 3;
  ::google::protobuf::int32 fb_element_len() const;
  void set_fb_element_len(::google::protobuf::int32 value);

  // repeated .test.fb_element_meta fb_element = 4;
  int fb_element_size() const;
  void clear_fb_element();
  static const int kFbElementFieldNumber = 4;
  const ::test::fb_element_meta& fb_element(int index) const;
  ::test::fb_element_meta* mutable_fb_element(int index);
  ::test::fb_element_meta* add_fb_element();
  ::google::protobuf::RepeatedPtrField< ::test::fb_element_meta >*
      mutable_fb_element();
  const ::google::protobuf::RepeatedPtrField< ::test::fb_element_meta >&
      fb_element() const;

  // @@protoc_insertion_point(class_scope:test.fastbit)
 private:
  inline void set_has_num_entries();
  inline void clear_has_num_entries();
  inline void set_has_max_num_entries();
  inline void clear_has_max_num_entries();
  inline void set_has_fb_element_len();
  inline void clear_has_fb_element_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 num_entries_;
  ::google::protobuf::int32 max_num_entries_;
  ::google::protobuf::RepeatedPtrField< ::test::fb_element_meta > fb_element_;
  ::google::protobuf::int32 fb_element_len_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static fastbit* default_instance_;
};
// -------------------------------------------------------------------

class fb_element_meta : public ::google::protobuf::Message {
 public:
  fb_element_meta();
  virtual ~fb_element_meta();

  fb_element_meta(const fb_element_meta& from);

  inline fb_element_meta& operator=(const fb_element_meta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fb_element_meta& default_instance();

  void Swap(fb_element_meta* other);

  // implements Message ----------------------------------------------

  inline fb_element_meta* New() const { return New(NULL); }

  fb_element_meta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fb_element_meta& from);
  void MergeFrom(const fb_element_meta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(fb_element_meta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // repeated int32 data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:test.fb_element_meta)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static fb_element_meta* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// fastbit

// required int32 num_entries = 1;
inline bool fastbit::has_num_entries() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fastbit::set_has_num_entries() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fastbit::clear_has_num_entries() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fastbit::clear_num_entries() {
  num_entries_ = 0;
  clear_has_num_entries();
}
inline ::google::protobuf::int32 fastbit::num_entries() const {
  // @@protoc_insertion_point(field_get:test.fastbit.num_entries)
  return num_entries_;
}
inline void fastbit::set_num_entries(::google::protobuf::int32 value) {
  set_has_num_entries();
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:test.fastbit.num_entries)
}

// required int32 max_num_entries = 2;
inline bool fastbit::has_max_num_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fastbit::set_has_max_num_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fastbit::clear_has_max_num_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fastbit::clear_max_num_entries() {
  max_num_entries_ = 0;
  clear_has_max_num_entries();
}
inline ::google::protobuf::int32 fastbit::max_num_entries() const {
  // @@protoc_insertion_point(field_get:test.fastbit.max_num_entries)
  return max_num_entries_;
}
inline void fastbit::set_max_num_entries(::google::protobuf::int32 value) {
  set_has_max_num_entries();
  max_num_entries_ = value;
  // @@protoc_insertion_point(field_set:test.fastbit.max_num_entries)
}

// required int32 fb_element_len = 3;
inline bool fastbit::has_fb_element_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fastbit::set_has_fb_element_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fastbit::clear_has_fb_element_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fastbit::clear_fb_element_len() {
  fb_element_len_ = 0;
  clear_has_fb_element_len();
}
inline ::google::protobuf::int32 fastbit::fb_element_len() const {
  // @@protoc_insertion_point(field_get:test.fastbit.fb_element_len)
  return fb_element_len_;
}
inline void fastbit::set_fb_element_len(::google::protobuf::int32 value) {
  set_has_fb_element_len();
  fb_element_len_ = value;
  // @@protoc_insertion_point(field_set:test.fastbit.fb_element_len)
}

// repeated .test.fb_element_meta fb_element = 4;
inline int fastbit::fb_element_size() const {
  return fb_element_.size();
}
inline void fastbit::clear_fb_element() {
  fb_element_.Clear();
}
inline const ::test::fb_element_meta& fastbit::fb_element(int index) const {
  // @@protoc_insertion_point(field_get:test.fastbit.fb_element)
  return fb_element_.Get(index);
}
inline ::test::fb_element_meta* fastbit::mutable_fb_element(int index) {
  // @@protoc_insertion_point(field_mutable:test.fastbit.fb_element)
  return fb_element_.Mutable(index);
}
inline ::test::fb_element_meta* fastbit::add_fb_element() {
  // @@protoc_insertion_point(field_add:test.fastbit.fb_element)
  return fb_element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::test::fb_element_meta >*
fastbit::mutable_fb_element() {
  // @@protoc_insertion_point(field_mutable_list:test.fastbit.fb_element)
  return &fb_element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::test::fb_element_meta >&
fastbit::fb_element() const {
  // @@protoc_insertion_point(field_list:test.fastbit.fb_element)
  return fb_element_;
}

// -------------------------------------------------------------------

// fb_element_meta

// required int32 id = 1;
inline bool fb_element_meta::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fb_element_meta::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fb_element_meta::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fb_element_meta::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 fb_element_meta::id() const {
  // @@protoc_insertion_point(field_get:test.fb_element_meta.id)
  return id_;
}
inline void fb_element_meta::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:test.fb_element_meta.id)
}

// repeated int32 data = 2;
inline int fb_element_meta::data_size() const {
  return data_.size();
}
inline void fb_element_meta::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 fb_element_meta::data(int index) const {
  // @@protoc_insertion_point(field_get:test.fb_element_meta.data)
  return data_.Get(index);
}
inline void fb_element_meta::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.fb_element_meta.data)
}
inline void fb_element_meta::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:test.fb_element_meta.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
fb_element_meta::data() const {
  // @@protoc_insertion_point(field_list:test.fb_element_meta.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
fb_element_meta::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:test.fb_element_meta.data)
  return &data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
