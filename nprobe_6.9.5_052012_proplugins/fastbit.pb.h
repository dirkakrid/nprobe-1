// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fastbit.proto

#ifndef PROTOBUF_fastbit_2eproto__INCLUDED
#define PROTOBUF_fastbit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace profastbit {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_fastbit_2eproto();
void protobuf_AssignDesc_fastbit_2eproto();
void protobuf_ShutdownFile_fastbit_2eproto();

class TemplateElementId;
class datareply;
class fb_element;
class prodata;

// ===================================================================

class datareply : public ::google::protobuf::Message {
 public:
  datareply();
  virtual ~datareply();

  datareply(const datareply& from);

  inline datareply& operator=(const datareply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const datareply& default_instance();

  void Swap(datareply* other);

  // implements Message ----------------------------------------------

  inline datareply* New() const { return New(NULL); }

  datareply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const datareply& from);
  void MergeFrom(const datareply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(datareply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:profastbit.datareply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_fastbit_2eproto();
  friend void protobuf_AssignDesc_fastbit_2eproto();
  friend void protobuf_ShutdownFile_fastbit_2eproto();

  void InitAsDefaultInstance();
  static datareply* default_instance_;
};
// -------------------------------------------------------------------

class prodata : public ::google::protobuf::Message {
 public:
  prodata();
  virtual ~prodata();

  prodata(const prodata& from);

  inline prodata& operator=(const prodata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const prodata& default_instance();

  void Swap(prodata* other);

  // implements Message ----------------------------------------------

  inline prodata* New() const { return New(NULL); }

  prodata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const prodata& from);
  void MergeFrom(const prodata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(prodata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string dump_dir = 1;
  void clear_dump_dir();
  static const int kDumpDirFieldNumber = 1;
  const ::std::string& dump_dir() const;
  void set_dump_dir(const ::std::string& value);
  void set_dump_dir(const char* value);
  void set_dump_dir(const char* value, size_t size);
  ::std::string* mutable_dump_dir();
  ::std::string* release_dump_dir();
  void set_allocated_dump_dir(::std::string* dump_dir);

  // optional int32 num_entries = 2;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // optional int32 fb_elementlen = 3;
  void clear_fb_elementlen();
  static const int kFbElementlenFieldNumber = 3;
  ::google::protobuf::int32 fb_elementlen() const;
  void set_fb_elementlen(::google::protobuf::int32 value);

  // repeated int32 fastbit_dump_switch = 4;
  int fastbit_dump_switch_size() const;
  void clear_fastbit_dump_switch();
  static const int kFastbitDumpSwitchFieldNumber = 4;
  ::google::protobuf::int32 fastbit_dump_switch(int index) const;
  void set_fastbit_dump_switch(int index, ::google::protobuf::int32 value);
  void add_fastbit_dump_switch(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fastbit_dump_switch() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fastbit_dump_switch();

  // repeated .profastbit.TemplateElementId templateelement = 5;
  int templateelement_size() const;
  void clear_templateelement();
  static const int kTemplateelementFieldNumber = 5;
  const ::profastbit::TemplateElementId& templateelement(int index) const;
  ::profastbit::TemplateElementId* mutable_templateelement(int index);
  ::profastbit::TemplateElementId* add_templateelement();
  ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >*
      mutable_templateelement();
  const ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >&
      templateelement() const;

  // repeated .profastbit.fb_element fb_element = 6;
  int fb_element_size() const;
  void clear_fb_element();
  static const int kFbElementFieldNumber = 6;
  const ::profastbit::fb_element& fb_element(int index) const;
  ::profastbit::fb_element* mutable_fb_element(int index);
  ::profastbit::fb_element* add_fb_element();
  ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >*
      mutable_fb_element();
  const ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >&
      fb_element() const;

  // @@protoc_insertion_point(class_scope:profastbit.prodata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr dump_dir_;
  ::google::protobuf::int32 num_entries_;
  ::google::protobuf::int32 fb_elementlen_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fastbit_dump_switch_;
  mutable int _fastbit_dump_switch_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId > templateelement_;
  ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element > fb_element_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_fastbit_2eproto();
  friend void protobuf_AssignDesc_fastbit_2eproto();
  friend void protobuf_ShutdownFile_fastbit_2eproto();

  void InitAsDefaultInstance();
  static prodata* default_instance_;
};
// -------------------------------------------------------------------

class TemplateElementId : public ::google::protobuf::Message {
 public:
  TemplateElementId();
  virtual ~TemplateElementId();

  TemplateElementId(const TemplateElementId& from);

  inline TemplateElementId& operator=(const TemplateElementId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TemplateElementId& default_instance();

  void Swap(TemplateElementId* other);

  // implements Message ----------------------------------------------

  inline TemplateElementId* New() const { return New(NULL); }

  TemplateElementId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TemplateElementId& from);
  void MergeFrom(const TemplateElementId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TemplateElementId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 templateElementLen = 1;
  void clear_templateelementlen();
  static const int kTemplateElementLenFieldNumber = 1;
  ::google::protobuf::int32 templateelementlen() const;
  void set_templateelementlen(::google::protobuf::int32 value);

  // optional string netflowElementName = 2;
  void clear_netflowelementname();
  static const int kNetflowElementNameFieldNumber = 2;
  const ::std::string& netflowelementname() const;
  void set_netflowelementname(const ::std::string& value);
  void set_netflowelementname(const char* value);
  void set_netflowelementname(const char* value, size_t size);
  ::std::string* mutable_netflowelementname();
  ::std::string* release_netflowelementname();
  void set_allocated_netflowelementname(::std::string* netflowelementname);

  // @@protoc_insertion_point(class_scope:profastbit.TemplateElementId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr netflowelementname_;
  ::google::protobuf::int32 templateelementlen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_fastbit_2eproto();
  friend void protobuf_AssignDesc_fastbit_2eproto();
  friend void protobuf_ShutdownFile_fastbit_2eproto();

  void InitAsDefaultInstance();
  static TemplateElementId* default_instance_;
};
// -------------------------------------------------------------------

class fb_element : public ::google::protobuf::Message {
 public:
  fb_element();
  virtual ~fb_element();

  fb_element(const fb_element& from);

  inline fb_element& operator=(const fb_element& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fb_element& default_instance();

  void Swap(fb_element* other);

  // implements Message ----------------------------------------------

  inline fb_element* New() const { return New(NULL); }

  fb_element* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fb_element& from);
  void MergeFrom(const fb_element& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(fb_element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes fb_element_data = 1;
  int fb_element_data_size() const;
  void clear_fb_element_data();
  static const int kFbElementDataFieldNumber = 1;
  const ::std::string& fb_element_data(int index) const;
  ::std::string* mutable_fb_element_data(int index);
  void set_fb_element_data(int index, const ::std::string& value);
  void set_fb_element_data(int index, const char* value);
  void set_fb_element_data(int index, const void* value, size_t size);
  ::std::string* add_fb_element_data();
  void add_fb_element_data(const ::std::string& value);
  void add_fb_element_data(const char* value);
  void add_fb_element_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& fb_element_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fb_element_data();

  // @@protoc_insertion_point(class_scope:profastbit.fb_element)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fb_element_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_fastbit_2eproto();
  friend void protobuf_AssignDesc_fastbit_2eproto();
  friend void protobuf_ShutdownFile_fastbit_2eproto();

  void InitAsDefaultInstance();
  static fb_element* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// datareply

// optional int32 ret = 1;
inline void datareply::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 datareply::ret() const {
  // @@protoc_insertion_point(field_get:profastbit.datareply.ret)
  return ret_;
}
inline void datareply::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:profastbit.datareply.ret)
}

// -------------------------------------------------------------------

// prodata

// optional string dump_dir = 1;
inline void prodata::clear_dump_dir() {
  dump_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& prodata::dump_dir() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.dump_dir)
  return dump_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void prodata::set_dump_dir(const ::std::string& value) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:profastbit.prodata.dump_dir)
}
inline void prodata::set_dump_dir(const char* value) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:profastbit.prodata.dump_dir)
}
inline void prodata::set_dump_dir(const char* value, size_t size) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:profastbit.prodata.dump_dir)
}
inline ::std::string* prodata::mutable_dump_dir() {
  
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.dump_dir)
  return dump_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* prodata::release_dump_dir() {
  
  return dump_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void prodata::set_allocated_dump_dir(::std::string* dump_dir) {
  if (dump_dir != NULL) {
    
  } else {
    
  }
  dump_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dump_dir);
  // @@protoc_insertion_point(field_set_allocated:profastbit.prodata.dump_dir)
}

// optional int32 num_entries = 2;
inline void prodata::clear_num_entries() {
  num_entries_ = 0;
}
inline ::google::protobuf::int32 prodata::num_entries() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.num_entries)
  return num_entries_;
}
inline void prodata::set_num_entries(::google::protobuf::int32 value) {
  
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:profastbit.prodata.num_entries)
}

// optional int32 fb_elementlen = 3;
inline void prodata::clear_fb_elementlen() {
  fb_elementlen_ = 0;
}
inline ::google::protobuf::int32 prodata::fb_elementlen() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fb_elementlen)
  return fb_elementlen_;
}
inline void prodata::set_fb_elementlen(::google::protobuf::int32 value) {
  
  fb_elementlen_ = value;
  // @@protoc_insertion_point(field_set:profastbit.prodata.fb_elementlen)
}

// repeated int32 fastbit_dump_switch = 4;
inline int prodata::fastbit_dump_switch_size() const {
  return fastbit_dump_switch_.size();
}
inline void prodata::clear_fastbit_dump_switch() {
  fastbit_dump_switch_.Clear();
}
inline ::google::protobuf::int32 prodata::fastbit_dump_switch(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fastbit_dump_switch)
  return fastbit_dump_switch_.Get(index);
}
inline void prodata::set_fastbit_dump_switch(int index, ::google::protobuf::int32 value) {
  fastbit_dump_switch_.Set(index, value);
  // @@protoc_insertion_point(field_set:profastbit.prodata.fastbit_dump_switch)
}
inline void prodata::add_fastbit_dump_switch(::google::protobuf::int32 value) {
  fastbit_dump_switch_.Add(value);
  // @@protoc_insertion_point(field_add:profastbit.prodata.fastbit_dump_switch)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
prodata::fastbit_dump_switch() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.fastbit_dump_switch)
  return fastbit_dump_switch_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
prodata::mutable_fastbit_dump_switch() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.fastbit_dump_switch)
  return &fastbit_dump_switch_;
}

// repeated .profastbit.TemplateElementId templateelement = 5;
inline int prodata::templateelement_size() const {
  return templateelement_.size();
}
inline void prodata::clear_templateelement() {
  templateelement_.Clear();
}
inline const ::profastbit::TemplateElementId& prodata::templateelement(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.templateelement)
  return templateelement_.Get(index);
}
inline ::profastbit::TemplateElementId* prodata::mutable_templateelement(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.templateelement)
  return templateelement_.Mutable(index);
}
inline ::profastbit::TemplateElementId* prodata::add_templateelement() {
  // @@protoc_insertion_point(field_add:profastbit.prodata.templateelement)
  return templateelement_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >*
prodata::mutable_templateelement() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.templateelement)
  return &templateelement_;
}
inline const ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >&
prodata::templateelement() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.templateelement)
  return templateelement_;
}

// repeated .profastbit.fb_element fb_element = 6;
inline int prodata::fb_element_size() const {
  return fb_element_.size();
}
inline void prodata::clear_fb_element() {
  fb_element_.Clear();
}
inline const ::profastbit::fb_element& prodata::fb_element(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fb_element)
  return fb_element_.Get(index);
}
inline ::profastbit::fb_element* prodata::mutable_fb_element(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.fb_element)
  return fb_element_.Mutable(index);
}
inline ::profastbit::fb_element* prodata::add_fb_element() {
  // @@protoc_insertion_point(field_add:profastbit.prodata.fb_element)
  return fb_element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >*
prodata::mutable_fb_element() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.fb_element)
  return &fb_element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >&
prodata::fb_element() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.fb_element)
  return fb_element_;
}

// -------------------------------------------------------------------

// TemplateElementId

// optional int32 templateElementLen = 1;
inline void TemplateElementId::clear_templateelementlen() {
  templateelementlen_ = 0;
}
inline ::google::protobuf::int32 TemplateElementId::templateelementlen() const {
  // @@protoc_insertion_point(field_get:profastbit.TemplateElementId.templateElementLen)
  return templateelementlen_;
}
inline void TemplateElementId::set_templateelementlen(::google::protobuf::int32 value) {
  
  templateelementlen_ = value;
  // @@protoc_insertion_point(field_set:profastbit.TemplateElementId.templateElementLen)
}

// optional string netflowElementName = 2;
inline void TemplateElementId::clear_netflowelementname() {
  netflowelementname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TemplateElementId::netflowelementname() const {
  // @@protoc_insertion_point(field_get:profastbit.TemplateElementId.netflowElementName)
  return netflowelementname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TemplateElementId::set_netflowelementname(const ::std::string& value) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:profastbit.TemplateElementId.netflowElementName)
}
inline void TemplateElementId::set_netflowelementname(const char* value) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:profastbit.TemplateElementId.netflowElementName)
}
inline void TemplateElementId::set_netflowelementname(const char* value, size_t size) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:profastbit.TemplateElementId.netflowElementName)
}
inline ::std::string* TemplateElementId::mutable_netflowelementname() {
  
  // @@protoc_insertion_point(field_mutable:profastbit.TemplateElementId.netflowElementName)
  return netflowelementname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TemplateElementId::release_netflowelementname() {
  
  return netflowelementname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TemplateElementId::set_allocated_netflowelementname(::std::string* netflowelementname) {
  if (netflowelementname != NULL) {
    
  } else {
    
  }
  netflowelementname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), netflowelementname);
  // @@protoc_insertion_point(field_set_allocated:profastbit.TemplateElementId.netflowElementName)
}

// -------------------------------------------------------------------

// fb_element

// repeated bytes fb_element_data = 1;
inline int fb_element::fb_element_data_size() const {
  return fb_element_data_.size();
}
inline void fb_element::clear_fb_element_data() {
  fb_element_data_.Clear();
}
inline const ::std::string& fb_element::fb_element_data(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.fb_element.fb_element_data)
  return fb_element_data_.Get(index);
}
inline ::std::string* fb_element::mutable_fb_element_data(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.fb_element.fb_element_data)
  return fb_element_data_.Mutable(index);
}
inline void fb_element::set_fb_element_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:profastbit.fb_element.fb_element_data)
  fb_element_data_.Mutable(index)->assign(value);
}
inline void fb_element::set_fb_element_data(int index, const char* value) {
  fb_element_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:profastbit.fb_element.fb_element_data)
}
inline void fb_element::set_fb_element_data(int index, const void* value, size_t size) {
  fb_element_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:profastbit.fb_element.fb_element_data)
}
inline ::std::string* fb_element::add_fb_element_data() {
  return fb_element_data_.Add();
}
inline void fb_element::add_fb_element_data(const ::std::string& value) {
  fb_element_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:profastbit.fb_element.fb_element_data)
}
inline void fb_element::add_fb_element_data(const char* value) {
  fb_element_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:profastbit.fb_element.fb_element_data)
}
inline void fb_element::add_fb_element_data(const void* value, size_t size) {
  fb_element_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:profastbit.fb_element.fb_element_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
fb_element::fb_element_data() const {
  // @@protoc_insertion_point(field_list:profastbit.fb_element.fb_element_data)
  return fb_element_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
fb_element::mutable_fb_element_data() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.fb_element.fb_element_data)
  return &fb_element_data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace profastbit

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fastbit_2eproto__INCLUDED
