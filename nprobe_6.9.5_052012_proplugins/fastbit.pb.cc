// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fastbit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fastbit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace profastbit {

namespace {

const ::google::protobuf::Descriptor* datareply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  datareply_reflection_ = NULL;
const ::google::protobuf::Descriptor* prodata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  prodata_reflection_ = NULL;
const ::google::protobuf::Descriptor* TemplateElementId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TemplateElementId_reflection_ = NULL;
const ::google::protobuf::Descriptor* fb_element_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  fb_element_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_fastbit_2eproto() {
  protobuf_AddDesc_fastbit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "fastbit.proto");
  GOOGLE_CHECK(file != NULL);
  datareply_descriptor_ = file->message_type(0);
  static const int datareply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datareply, ret_),
  };
  datareply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      datareply_descriptor_,
      datareply::default_instance_,
      datareply_offsets_,
      -1,
      -1,
      -1,
      sizeof(datareply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datareply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datareply, _is_default_instance_));
  prodata_descriptor_ = file->message_type(1);
  static const int prodata_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, dump_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, num_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, fb_elementlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, fastbit_dump_switch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, templateelement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, fb_element_),
  };
  prodata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      prodata_descriptor_,
      prodata::default_instance_,
      prodata_offsets_,
      -1,
      -1,
      -1,
      sizeof(prodata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(prodata, _is_default_instance_));
  TemplateElementId_descriptor_ = file->message_type(2);
  static const int TemplateElementId_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateElementId, templateelementlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateElementId, netflowelementname_),
  };
  TemplateElementId_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TemplateElementId_descriptor_,
      TemplateElementId::default_instance_,
      TemplateElementId_offsets_,
      -1,
      -1,
      -1,
      sizeof(TemplateElementId),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateElementId, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemplateElementId, _is_default_instance_));
  fb_element_descriptor_ = file->message_type(3);
  static const int fb_element_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fb_element, fb_element_data_),
  };
  fb_element_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      fb_element_descriptor_,
      fb_element::default_instance_,
      fb_element_offsets_,
      -1,
      -1,
      -1,
      sizeof(fb_element),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fb_element, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fb_element, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_fastbit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      datareply_descriptor_, &datareply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      prodata_descriptor_, &prodata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TemplateElementId_descriptor_, &TemplateElementId::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      fb_element_descriptor_, &fb_element::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_fastbit_2eproto() {
  delete datareply::default_instance_;
  delete datareply_reflection_;
  delete prodata::default_instance_;
  delete prodata_reflection_;
  delete TemplateElementId::default_instance_;
  delete TemplateElementId_reflection_;
  delete fb_element::default_instance_;
  delete fb_element_reflection_;
}

void protobuf_AddDesc_fastbit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rfastbit.proto\022\nprofastbit\"\030\n\tdatareply"
    "\022\013\n\003ret\030\001 \001(\005\"\310\001\n\007prodata\022\020\n\010dump_dir\030\001 "
    "\001(\t\022\023\n\013num_entries\030\002 \001(\005\022\025\n\rfb_elementle"
    "n\030\003 \001(\005\022\033\n\023fastbit_dump_switch\030\004 \003(\005\0226\n\017"
    "templateelement\030\005 \003(\0132\035.profastbit.Templ"
    "ateElementId\022*\n\nfb_element\030\006 \003(\0132\026.profa"
    "stbit.fb_element\"K\n\021TemplateElementId\022\032\n"
    "\022templateElementLen\030\001 \001(\005\022\032\n\022netflowElem"
    "entName\030\002 \001(\t\"%\n\nfb_element\022\027\n\017fb_elemen"
    "t_data\030\001 \003(\0142J\n\014dump_fastbit\022:\n\ndumptofa"
    "st\022\023.profastbit.prodata\032\025.profastbit.dat"
    "areply\"\000b\006proto3", 456);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fastbit.proto", &protobuf_RegisterTypes);
  datareply::default_instance_ = new datareply();
  prodata::default_instance_ = new prodata();
  TemplateElementId::default_instance_ = new TemplateElementId();
  fb_element::default_instance_ = new fb_element();
  datareply::default_instance_->InitAsDefaultInstance();
  prodata::default_instance_->InitAsDefaultInstance();
  TemplateElementId::default_instance_->InitAsDefaultInstance();
  fb_element::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_fastbit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_fastbit_2eproto {
  StaticDescriptorInitializer_fastbit_2eproto() {
    protobuf_AddDesc_fastbit_2eproto();
  }
} static_descriptor_initializer_fastbit_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int datareply::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

datareply::datareply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:profastbit.datareply)
}

void datareply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

datareply::datareply(const datareply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:profastbit.datareply)
}

void datareply::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ret_ = 0;
}

datareply::~datareply() {
  // @@protoc_insertion_point(destructor:profastbit.datareply)
  SharedDtor();
}

void datareply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void datareply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* datareply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return datareply_descriptor_;
}

const datareply& datareply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fastbit_2eproto();
  return *default_instance_;
}

datareply* datareply::default_instance_ = NULL;

datareply* datareply::New(::google::protobuf::Arena* arena) const {
  datareply* n = new datareply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void datareply::Clear() {
  ret_ = 0;
}

bool datareply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profastbit.datareply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profastbit.datareply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profastbit.datareply)
  return false;
#undef DO_
}

void datareply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profastbit.datareply)
  // optional int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // @@protoc_insertion_point(serialize_end:profastbit.datareply)
}

::google::protobuf::uint8* datareply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:profastbit.datareply)
  // optional int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:profastbit.datareply)
  return target;
}

int datareply::ByteSize() const {
  int total_size = 0;

  // optional int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void datareply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const datareply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const datareply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void datareply::MergeFrom(const datareply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void datareply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void datareply::CopyFrom(const datareply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool datareply::IsInitialized() const {

  return true;
}

void datareply::Swap(datareply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void datareply::InternalSwap(datareply* other) {
  std::swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata datareply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = datareply_descriptor_;
  metadata.reflection = datareply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// datareply

// optional int32 ret = 1;
void datareply::clear_ret() {
  ret_ = 0;
}
 ::google::protobuf::int32 datareply::ret() const {
  // @@protoc_insertion_point(field_get:profastbit.datareply.ret)
  return ret_;
}
 void datareply::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:profastbit.datareply.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int prodata::kDumpDirFieldNumber;
const int prodata::kNumEntriesFieldNumber;
const int prodata::kFbElementlenFieldNumber;
const int prodata::kFastbitDumpSwitchFieldNumber;
const int prodata::kTemplateelementFieldNumber;
const int prodata::kFbElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

prodata::prodata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:profastbit.prodata)
}

void prodata::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

prodata::prodata(const prodata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:profastbit.prodata)
}

void prodata::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dump_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_entries_ = 0;
  fb_elementlen_ = 0;
}

prodata::~prodata() {
  // @@protoc_insertion_point(destructor:profastbit.prodata)
  SharedDtor();
}

void prodata::SharedDtor() {
  dump_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void prodata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* prodata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return prodata_descriptor_;
}

const prodata& prodata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fastbit_2eproto();
  return *default_instance_;
}

prodata* prodata::default_instance_ = NULL;

prodata* prodata::New(::google::protobuf::Arena* arena) const {
  prodata* n = new prodata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void prodata::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<prodata*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_entries_, fb_elementlen_);
  dump_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  fastbit_dump_switch_.Clear();
  templateelement_.Clear();
  fb_element_.Clear();
}

bool prodata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profastbit.prodata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string dump_dir = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dump_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dump_dir().data(), this->dump_dir().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "profastbit.prodata.dump_dir"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_entries;
        break;
      }

      // optional int32 num_entries = 2;
      case 2: {
        if (tag == 16) {
         parse_num_entries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_entries_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fb_elementlen;
        break;
      }

      // optional int32 fb_elementlen = 3;
      case 3: {
        if (tag == 24) {
         parse_fb_elementlen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_elementlen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fastbit_dump_switch;
        break;
      }

      // repeated int32 fastbit_dump_switch = 4;
      case 4: {
        if (tag == 34) {
         parse_fastbit_dump_switch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fastbit_dump_switch())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_fastbit_dump_switch())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_templateelement;
        break;
      }

      // repeated .profastbit.TemplateElementId templateelement = 5;
      case 5: {
        if (tag == 42) {
         parse_templateelement:
          DO_(input->IncrementRecursionDepth());
         parse_loop_templateelement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_templateelement()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_templateelement;
        if (input->ExpectTag(50)) goto parse_loop_fb_element;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .profastbit.fb_element fb_element = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_fb_element:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fb_element()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_fb_element;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profastbit.prodata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profastbit.prodata)
  return false;
#undef DO_
}

void prodata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profastbit.prodata)
  // optional string dump_dir = 1;
  if (this->dump_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_dir().data(), this->dump_dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profastbit.prodata.dump_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dump_dir(), output);
  }

  // optional int32 num_entries = 2;
  if (this->num_entries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_entries(), output);
  }

  // optional int32 fb_elementlen = 3;
  if (this->fb_elementlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fb_elementlen(), output);
  }

  // repeated int32 fastbit_dump_switch = 4;
  if (this->fastbit_dump_switch_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fastbit_dump_switch_cached_byte_size_);
  }
  for (int i = 0; i < this->fastbit_dump_switch_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->fastbit_dump_switch(i), output);
  }

  // repeated .profastbit.TemplateElementId templateelement = 5;
  for (unsigned int i = 0, n = this->templateelement_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->templateelement(i), output);
  }

  // repeated .profastbit.fb_element fb_element = 6;
  for (unsigned int i = 0, n = this->fb_element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fb_element(i), output);
  }

  // @@protoc_insertion_point(serialize_end:profastbit.prodata)
}

::google::protobuf::uint8* prodata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:profastbit.prodata)
  // optional string dump_dir = 1;
  if (this->dump_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_dir().data(), this->dump_dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profastbit.prodata.dump_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dump_dir(), target);
  }

  // optional int32 num_entries = 2;
  if (this->num_entries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_entries(), target);
  }

  // optional int32 fb_elementlen = 3;
  if (this->fb_elementlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fb_elementlen(), target);
  }

  // repeated int32 fastbit_dump_switch = 4;
  if (this->fastbit_dump_switch_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fastbit_dump_switch_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fastbit_dump_switch_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->fastbit_dump_switch(i), target);
  }

  // repeated .profastbit.TemplateElementId templateelement = 5;
  for (unsigned int i = 0, n = this->templateelement_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->templateelement(i), target);
  }

  // repeated .profastbit.fb_element fb_element = 6;
  for (unsigned int i = 0, n = this->fb_element_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fb_element(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:profastbit.prodata)
  return target;
}

int prodata::ByteSize() const {
  int total_size = 0;

  // optional string dump_dir = 1;
  if (this->dump_dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dump_dir());
  }

  // optional int32 num_entries = 2;
  if (this->num_entries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_entries());
  }

  // optional int32 fb_elementlen = 3;
  if (this->fb_elementlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fb_elementlen());
  }

  // repeated int32 fastbit_dump_switch = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->fastbit_dump_switch_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fastbit_dump_switch(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fastbit_dump_switch_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .profastbit.TemplateElementId templateelement = 5;
  total_size += 1 * this->templateelement_size();
  for (int i = 0; i < this->templateelement_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->templateelement(i));
  }

  // repeated .profastbit.fb_element fb_element = 6;
  total_size += 1 * this->fb_element_size();
  for (int i = 0; i < this->fb_element_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fb_element(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void prodata::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const prodata* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const prodata>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void prodata::MergeFrom(const prodata& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  fastbit_dump_switch_.MergeFrom(from.fastbit_dump_switch_);
  templateelement_.MergeFrom(from.templateelement_);
  fb_element_.MergeFrom(from.fb_element_);
  if (from.dump_dir().size() > 0) {

    dump_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dump_dir_);
  }
  if (from.num_entries() != 0) {
    set_num_entries(from.num_entries());
  }
  if (from.fb_elementlen() != 0) {
    set_fb_elementlen(from.fb_elementlen());
  }
}

void prodata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void prodata::CopyFrom(const prodata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool prodata::IsInitialized() const {

  return true;
}

void prodata::Swap(prodata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void prodata::InternalSwap(prodata* other) {
  dump_dir_.Swap(&other->dump_dir_);
  std::swap(num_entries_, other->num_entries_);
  std::swap(fb_elementlen_, other->fb_elementlen_);
  fastbit_dump_switch_.UnsafeArenaSwap(&other->fastbit_dump_switch_);
  templateelement_.UnsafeArenaSwap(&other->templateelement_);
  fb_element_.UnsafeArenaSwap(&other->fb_element_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata prodata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = prodata_descriptor_;
  metadata.reflection = prodata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// prodata

// optional string dump_dir = 1;
void prodata::clear_dump_dir() {
  dump_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& prodata::dump_dir() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.dump_dir)
  return dump_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void prodata::set_dump_dir(const ::std::string& value) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:profastbit.prodata.dump_dir)
}
 void prodata::set_dump_dir(const char* value) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:profastbit.prodata.dump_dir)
}
 void prodata::set_dump_dir(const char* value, size_t size) {
  
  dump_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:profastbit.prodata.dump_dir)
}
 ::std::string* prodata::mutable_dump_dir() {
  
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.dump_dir)
  return dump_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* prodata::release_dump_dir() {
  
  return dump_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void prodata::set_allocated_dump_dir(::std::string* dump_dir) {
  if (dump_dir != NULL) {
    
  } else {
    
  }
  dump_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dump_dir);
  // @@protoc_insertion_point(field_set_allocated:profastbit.prodata.dump_dir)
}

// optional int32 num_entries = 2;
void prodata::clear_num_entries() {
  num_entries_ = 0;
}
 ::google::protobuf::int32 prodata::num_entries() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.num_entries)
  return num_entries_;
}
 void prodata::set_num_entries(::google::protobuf::int32 value) {
  
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:profastbit.prodata.num_entries)
}

// optional int32 fb_elementlen = 3;
void prodata::clear_fb_elementlen() {
  fb_elementlen_ = 0;
}
 ::google::protobuf::int32 prodata::fb_elementlen() const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fb_elementlen)
  return fb_elementlen_;
}
 void prodata::set_fb_elementlen(::google::protobuf::int32 value) {
  
  fb_elementlen_ = value;
  // @@protoc_insertion_point(field_set:profastbit.prodata.fb_elementlen)
}

// repeated int32 fastbit_dump_switch = 4;
int prodata::fastbit_dump_switch_size() const {
  return fastbit_dump_switch_.size();
}
void prodata::clear_fastbit_dump_switch() {
  fastbit_dump_switch_.Clear();
}
 ::google::protobuf::int32 prodata::fastbit_dump_switch(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fastbit_dump_switch)
  return fastbit_dump_switch_.Get(index);
}
 void prodata::set_fastbit_dump_switch(int index, ::google::protobuf::int32 value) {
  fastbit_dump_switch_.Set(index, value);
  // @@protoc_insertion_point(field_set:profastbit.prodata.fastbit_dump_switch)
}
 void prodata::add_fastbit_dump_switch(::google::protobuf::int32 value) {
  fastbit_dump_switch_.Add(value);
  // @@protoc_insertion_point(field_add:profastbit.prodata.fastbit_dump_switch)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
prodata::fastbit_dump_switch() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.fastbit_dump_switch)
  return fastbit_dump_switch_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
prodata::mutable_fastbit_dump_switch() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.fastbit_dump_switch)
  return &fastbit_dump_switch_;
}

// repeated .profastbit.TemplateElementId templateelement = 5;
int prodata::templateelement_size() const {
  return templateelement_.size();
}
void prodata::clear_templateelement() {
  templateelement_.Clear();
}
const ::profastbit::TemplateElementId& prodata::templateelement(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.templateelement)
  return templateelement_.Get(index);
}
::profastbit::TemplateElementId* prodata::mutable_templateelement(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.templateelement)
  return templateelement_.Mutable(index);
}
::profastbit::TemplateElementId* prodata::add_templateelement() {
  // @@protoc_insertion_point(field_add:profastbit.prodata.templateelement)
  return templateelement_.Add();
}
::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >*
prodata::mutable_templateelement() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.templateelement)
  return &templateelement_;
}
const ::google::protobuf::RepeatedPtrField< ::profastbit::TemplateElementId >&
prodata::templateelement() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.templateelement)
  return templateelement_;
}

// repeated .profastbit.fb_element fb_element = 6;
int prodata::fb_element_size() const {
  return fb_element_.size();
}
void prodata::clear_fb_element() {
  fb_element_.Clear();
}
const ::profastbit::fb_element& prodata::fb_element(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.prodata.fb_element)
  return fb_element_.Get(index);
}
::profastbit::fb_element* prodata::mutable_fb_element(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.prodata.fb_element)
  return fb_element_.Mutable(index);
}
::profastbit::fb_element* prodata::add_fb_element() {
  // @@protoc_insertion_point(field_add:profastbit.prodata.fb_element)
  return fb_element_.Add();
}
::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >*
prodata::mutable_fb_element() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.prodata.fb_element)
  return &fb_element_;
}
const ::google::protobuf::RepeatedPtrField< ::profastbit::fb_element >&
prodata::fb_element() const {
  // @@protoc_insertion_point(field_list:profastbit.prodata.fb_element)
  return fb_element_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemplateElementId::kTemplateElementLenFieldNumber;
const int TemplateElementId::kNetflowElementNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemplateElementId::TemplateElementId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:profastbit.TemplateElementId)
}

void TemplateElementId::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TemplateElementId::TemplateElementId(const TemplateElementId& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:profastbit.TemplateElementId)
}

void TemplateElementId::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  templateelementlen_ = 0;
  netflowelementname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TemplateElementId::~TemplateElementId() {
  // @@protoc_insertion_point(destructor:profastbit.TemplateElementId)
  SharedDtor();
}

void TemplateElementId::SharedDtor() {
  netflowelementname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TemplateElementId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemplateElementId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TemplateElementId_descriptor_;
}

const TemplateElementId& TemplateElementId::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fastbit_2eproto();
  return *default_instance_;
}

TemplateElementId* TemplateElementId::default_instance_ = NULL;

TemplateElementId* TemplateElementId::New(::google::protobuf::Arena* arena) const {
  TemplateElementId* n = new TemplateElementId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TemplateElementId::Clear() {
  templateelementlen_ = 0;
  netflowelementname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TemplateElementId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profastbit.TemplateElementId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 templateElementLen = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateelementlen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_netflowElementName;
        break;
      }

      // optional string netflowElementName = 2;
      case 2: {
        if (tag == 18) {
         parse_netflowElementName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_netflowelementname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->netflowelementname().data(), this->netflowelementname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "profastbit.TemplateElementId.netflowElementName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profastbit.TemplateElementId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profastbit.TemplateElementId)
  return false;
#undef DO_
}

void TemplateElementId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profastbit.TemplateElementId)
  // optional int32 templateElementLen = 1;
  if (this->templateelementlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->templateelementlen(), output);
  }

  // optional string netflowElementName = 2;
  if (this->netflowelementname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->netflowelementname().data(), this->netflowelementname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profastbit.TemplateElementId.netflowElementName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->netflowelementname(), output);
  }

  // @@protoc_insertion_point(serialize_end:profastbit.TemplateElementId)
}

::google::protobuf::uint8* TemplateElementId::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:profastbit.TemplateElementId)
  // optional int32 templateElementLen = 1;
  if (this->templateelementlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->templateelementlen(), target);
  }

  // optional string netflowElementName = 2;
  if (this->netflowelementname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->netflowelementname().data(), this->netflowelementname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profastbit.TemplateElementId.netflowElementName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->netflowelementname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:profastbit.TemplateElementId)
  return target;
}

int TemplateElementId::ByteSize() const {
  int total_size = 0;

  // optional int32 templateElementLen = 1;
  if (this->templateelementlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->templateelementlen());
  }

  // optional string netflowElementName = 2;
  if (this->netflowelementname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->netflowelementname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemplateElementId::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TemplateElementId* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TemplateElementId>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TemplateElementId::MergeFrom(const TemplateElementId& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.templateelementlen() != 0) {
    set_templateelementlen(from.templateelementlen());
  }
  if (from.netflowelementname().size() > 0) {

    netflowelementname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.netflowelementname_);
  }
}

void TemplateElementId::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateElementId::CopyFrom(const TemplateElementId& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateElementId::IsInitialized() const {

  return true;
}

void TemplateElementId::Swap(TemplateElementId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemplateElementId::InternalSwap(TemplateElementId* other) {
  std::swap(templateelementlen_, other->templateelementlen_);
  netflowelementname_.Swap(&other->netflowelementname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TemplateElementId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TemplateElementId_descriptor_;
  metadata.reflection = TemplateElementId_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TemplateElementId

// optional int32 templateElementLen = 1;
void TemplateElementId::clear_templateelementlen() {
  templateelementlen_ = 0;
}
 ::google::protobuf::int32 TemplateElementId::templateelementlen() const {
  // @@protoc_insertion_point(field_get:profastbit.TemplateElementId.templateElementLen)
  return templateelementlen_;
}
 void TemplateElementId::set_templateelementlen(::google::protobuf::int32 value) {
  
  templateelementlen_ = value;
  // @@protoc_insertion_point(field_set:profastbit.TemplateElementId.templateElementLen)
}

// optional string netflowElementName = 2;
void TemplateElementId::clear_netflowelementname() {
  netflowelementname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TemplateElementId::netflowelementname() const {
  // @@protoc_insertion_point(field_get:profastbit.TemplateElementId.netflowElementName)
  return netflowelementname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TemplateElementId::set_netflowelementname(const ::std::string& value) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:profastbit.TemplateElementId.netflowElementName)
}
 void TemplateElementId::set_netflowelementname(const char* value) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:profastbit.TemplateElementId.netflowElementName)
}
 void TemplateElementId::set_netflowelementname(const char* value, size_t size) {
  
  netflowelementname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:profastbit.TemplateElementId.netflowElementName)
}
 ::std::string* TemplateElementId::mutable_netflowelementname() {
  
  // @@protoc_insertion_point(field_mutable:profastbit.TemplateElementId.netflowElementName)
  return netflowelementname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TemplateElementId::release_netflowelementname() {
  
  return netflowelementname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TemplateElementId::set_allocated_netflowelementname(::std::string* netflowelementname) {
  if (netflowelementname != NULL) {
    
  } else {
    
  }
  netflowelementname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), netflowelementname);
  // @@protoc_insertion_point(field_set_allocated:profastbit.TemplateElementId.netflowElementName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int fb_element::kFbElementDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

fb_element::fb_element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:profastbit.fb_element)
}

void fb_element::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

fb_element::fb_element(const fb_element& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:profastbit.fb_element)
}

void fb_element::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

fb_element::~fb_element() {
  // @@protoc_insertion_point(destructor:profastbit.fb_element)
  SharedDtor();
}

void fb_element::SharedDtor() {
  if (this != default_instance_) {
  }
}

void fb_element::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* fb_element::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return fb_element_descriptor_;
}

const fb_element& fb_element::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fastbit_2eproto();
  return *default_instance_;
}

fb_element* fb_element::default_instance_ = NULL;

fb_element* fb_element::New(::google::protobuf::Arena* arena) const {
  fb_element* n = new fb_element;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void fb_element::Clear() {
  fb_element_data_.Clear();
}

bool fb_element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profastbit.fb_element)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes fb_element_data = 1;
      case 1: {
        if (tag == 10) {
         parse_fb_element_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_fb_element_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_fb_element_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profastbit.fb_element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profastbit.fb_element)
  return false;
#undef DO_
}

void fb_element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profastbit.fb_element)
  // repeated bytes fb_element_data = 1;
  for (int i = 0; i < this->fb_element_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->fb_element_data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:profastbit.fb_element)
}

::google::protobuf::uint8* fb_element::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:profastbit.fb_element)
  // repeated bytes fb_element_data = 1;
  for (int i = 0; i < this->fb_element_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->fb_element_data(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:profastbit.fb_element)
  return target;
}

int fb_element::ByteSize() const {
  int total_size = 0;

  // repeated bytes fb_element_data = 1;
  total_size += 1 * this->fb_element_data_size();
  for (int i = 0; i < this->fb_element_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->fb_element_data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void fb_element::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const fb_element* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const fb_element>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void fb_element::MergeFrom(const fb_element& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  fb_element_data_.MergeFrom(from.fb_element_data_);
}

void fb_element::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fb_element::CopyFrom(const fb_element& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fb_element::IsInitialized() const {

  return true;
}

void fb_element::Swap(fb_element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void fb_element::InternalSwap(fb_element* other) {
  fb_element_data_.UnsafeArenaSwap(&other->fb_element_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata fb_element::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = fb_element_descriptor_;
  metadata.reflection = fb_element_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// fb_element

// repeated bytes fb_element_data = 1;
int fb_element::fb_element_data_size() const {
  return fb_element_data_.size();
}
void fb_element::clear_fb_element_data() {
  fb_element_data_.Clear();
}
 const ::std::string& fb_element::fb_element_data(int index) const {
  // @@protoc_insertion_point(field_get:profastbit.fb_element.fb_element_data)
  return fb_element_data_.Get(index);
}
 ::std::string* fb_element::mutable_fb_element_data(int index) {
  // @@protoc_insertion_point(field_mutable:profastbit.fb_element.fb_element_data)
  return fb_element_data_.Mutable(index);
}
 void fb_element::set_fb_element_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:profastbit.fb_element.fb_element_data)
  fb_element_data_.Mutable(index)->assign(value);
}
 void fb_element::set_fb_element_data(int index, const char* value) {
  fb_element_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:profastbit.fb_element.fb_element_data)
}
 void fb_element::set_fb_element_data(int index, const void* value, size_t size) {
  fb_element_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:profastbit.fb_element.fb_element_data)
}
 ::std::string* fb_element::add_fb_element_data() {
  return fb_element_data_.Add();
}
 void fb_element::add_fb_element_data(const ::std::string& value) {
  fb_element_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:profastbit.fb_element.fb_element_data)
}
 void fb_element::add_fb_element_data(const char* value) {
  fb_element_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:profastbit.fb_element.fb_element_data)
}
 void fb_element::add_fb_element_data(const void* value, size_t size) {
  fb_element_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:profastbit.fb_element.fb_element_data)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
fb_element::fb_element_data() const {
  // @@protoc_insertion_point(field_list:profastbit.fb_element.fb_element_data)
  return fb_element_data_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
fb_element::mutable_fb_element_data() {
  // @@protoc_insertion_point(field_mutable_list:profastbit.fb_element.fb_element_data)
  return &fb_element_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace profastbit

// @@protoc_insertion_point(global_scope)
